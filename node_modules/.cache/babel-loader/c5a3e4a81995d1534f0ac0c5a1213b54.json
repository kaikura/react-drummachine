{"ast":null,"code":"var _jsxFileName = \"/Users/agnesepantaleone/Desktop/Drummachine/src/components/transport.tsx\";\nimport * as React from 'react';\nimport { Transport } from 'tone';\nimport { Instrument } from './instrument';\nimport { InstrumentHack } from './instrument-hack';\nimport { Steps } from './steps';\nexport class TransportComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleStepChange = id => {\n      const s = this.state.steps;\n      s[id] = !s[id];\n      this.setState({\n        steps: s\n      });\n    };\n\n    this.selectInstrument = (selected, steps) => {\n      if (this.state.selected === selected) {\n        this.setState({\n          selected: null,\n          steps: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n        });\n      } else {\n        this.setState({\n          selected,\n          steps\n        });\n      }\n    };\n\n    this.state = {\n      steps: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      selected: null,\n      bpm: 120\n    };\n    Transport.loop = true;\n    Transport.loopEnd = '1m';\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        marginRight: '0px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(InstrumentHack, {\n      steps: this.state.steps,\n      selectedInstrument: this.state.selected,\n      className: \"trnsp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Instrument, {\n      engine: \"Kick\",\n      key: \"Kick\",\n      handleClick: this.selectInstrument,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Instrument, {\n      engine: \"Snare\",\n      key: \"Snare\",\n      handleClick: this.selectInstrument,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Instrument, {\n      engine: \"HiHat\",\n      key: \"HiHat\",\n      handleClick: this.selectInstrument,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Instrument, {\n      engine: \"Cymbal\",\n      key: \"Cymbal\",\n      handleClick: this.selectInstrument,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Instrument, {\n      engine: \"Clap\",\n      key: \"Clap\",\n      handleClick: this.selectInstrument,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(Steps, {\n      handleStepChange: this.handleStepChange,\n      steps: this.state.steps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/agnesepantaleone/Desktop/Drummachine/src/components/transport.tsx"],"names":["React","Transport","Instrument","InstrumentHack","Steps","TransportComponent","Component","constructor","props","handleStepChange","id","s","state","steps","setState","selectInstrument","selected","bpm","loop","loopEnd","render","marginRight"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Transport } from 'tone';\nimport { MainSketch } from '../sketches/sketch';\nimport { Instrument } from './instrument';\nimport { InstrumentHack } from './instrument-hack';\n\nimport { Steps } from './steps';\n\nexport class TransportComponent extends React.Component<any, any> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            steps: [false, false, false, false, false, false, false, false,\n                false, false, false, false, false, false, false, false],\n            selected: null,\n            bpm: 120,\n        }\n        Transport.loop = true;\n        Transport.loopEnd = '1m'\n    }\n\n   \n\n    private handleStepChange = (id: number) => {\n        const s = this.state.steps;\n        s[id] = !s[id];\n        this.setState({\n            steps: s,\n        })\n    }\n\n    private selectInstrument = (selected: string, steps: boolean[]) => {\n        if (this.state.selected === selected) {\n            this.setState({\n                selected: null, steps: [false, false, false, false, false, false, false, false,\n                    false, false, false, false, false, false, false, false]\n            })\n        } else {\n            this.setState({ selected, steps })\n        }\n    }\n\n    \n\n    render() {\n        return (\n            <div style={{marginRight : '0px'}}>\n                \n                \n\n                <InstrumentHack steps={this.state.steps} selectedInstrument={this.state.selected} className=\"trnsp\">\n                    <Instrument engine='Kick' key='Kick' handleClick={this.selectInstrument} />\n                    <Instrument engine='Snare' key='Snare' handleClick={this.selectInstrument} />\n                    <Instrument engine='HiHat' key='HiHat' handleClick={this.selectInstrument} />\n                    <Instrument engine='Cymbal' key='Cymbal' handleClick={this.selectInstrument} />\n                    <Instrument engine='Clap' key='Clap' handleClick={this.selectInstrument} />\n                </InstrumentHack>\n                <Steps handleStepChange={this.handleStepChange} steps={this.state.steps} />\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}